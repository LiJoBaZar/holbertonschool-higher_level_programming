The ``0-add_integer`` module
=============================

Using ``add_integer``
---------------------
importing the module
    >>> add_integer = __import__('0-add_integer').add_integer

Adding two integers:
    >>> add_integer(4, 2)
    6

Adding two float:
    >>> add_integer(4.0, 2.7)
    6

Adding int and float:
    >>> add_integer(4, 2.7)
    6

Add a negative value:
    >>> add_integer(-4, 2.9999)
    -2

Infinite int:
    >>> add_integer(float('inf'), 1)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

Int with string:
    >>> add_integer(2, "H")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

String in arg 1:
    >>> add_integer("D", 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

None at arg 1:
    >>> add_integer(None, 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer


0 arguments:
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

1 arguments:
    >>> add_integer(1)
    99

more than 2 arguments:
     >>> add_integer(3, 2, 1)
     Traceback (most recent call last):
        ...
     TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Adding big numbers:
    >>> add_integer(1213213213213213212313213212313223, 45465456465465465465465465465)
    1213258678669678677778678677778688

Adding a NaN:
    >>> add_integer(float('NaN'), 12)
    Traceback (most recent call last):
             ...
    ValueError: cannot convert float NaN to integer